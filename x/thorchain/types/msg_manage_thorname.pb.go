// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/msg_manage_thorname.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	common "gitlab.com/thorchain/thornode/common"
	gitlab_com_thorchain_thornode_common "gitlab.com/thorchain/thornode/common"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgManageTHORName struct {
	Name              string                                        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Chain             gitlab_com_thorchain_thornode_common.Chain    `protobuf:"bytes,2,opt,name=chain,proto3,casttype=gitlab.com/thorchain/thornode/common.Chain" json:"chain,omitempty"`
	Address           gitlab_com_thorchain_thornode_common.Address  `protobuf:"bytes,3,opt,name=address,proto3,casttype=gitlab.com/thorchain/thornode/common.Address" json:"address,omitempty"`
	Coin              common.Coin                                   `protobuf:"bytes,4,opt,name=coin,proto3" json:"coin"`
	ExpireBlockHeight int64                                         `protobuf:"varint,5,opt,name=expire_block_height,json=expireBlockHeight,proto3" json:"expire_block_height,omitempty"`
	PreferredAsset    common.Asset                                  `protobuf:"bytes,6,opt,name=preferred_asset,json=preferredAsset,proto3" json:"preferred_asset"`
	Owner             github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,7,opt,name=owner,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"owner,omitempty"`
	Signer            github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,8,opt,name=signer,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"signer,omitempty"`
}

func (m *MsgManageTHORName) Reset()         { *m = MsgManageTHORName{} }
func (m *MsgManageTHORName) String() string { return proto.CompactTextString(m) }
func (*MsgManageTHORName) ProtoMessage()    {}
func (*MsgManageTHORName) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf2584b8e9fdfb5c, []int{0}
}
func (m *MsgManageTHORName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgManageTHORName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgManageTHORName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgManageTHORName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgManageTHORName.Merge(m, src)
}
func (m *MsgManageTHORName) XXX_Size() int {
	return m.Size()
}
func (m *MsgManageTHORName) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgManageTHORName.DiscardUnknown(m)
}

var xxx_messageInfo_MsgManageTHORName proto.InternalMessageInfo

func (m *MsgManageTHORName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgManageTHORName) GetChain() gitlab_com_thorchain_thornode_common.Chain {
	if m != nil {
		return m.Chain
	}
	return ""
}

func (m *MsgManageTHORName) GetAddress() gitlab_com_thorchain_thornode_common.Address {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgManageTHORName) GetCoin() common.Coin {
	if m != nil {
		return m.Coin
	}
	return common.Coin{}
}

func (m *MsgManageTHORName) GetExpireBlockHeight() int64 {
	if m != nil {
		return m.ExpireBlockHeight
	}
	return 0
}

func (m *MsgManageTHORName) GetPreferredAsset() common.Asset {
	if m != nil {
		return m.PreferredAsset
	}
	return common.Asset{}
}

func (m *MsgManageTHORName) GetOwner() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *MsgManageTHORName) GetSigner() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Signer
	}
	return nil
}

func init() {
	proto.RegisterType((*MsgManageTHORName)(nil), "types.MsgManageTHORName")
}

func init() { proto.RegisterFile("types/msg_manage_thorname.proto", fileDescriptor_bf2584b8e9fdfb5c) }

var fileDescriptor_bf2584b8e9fdfb5c = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x3f, 0x6f, 0xd4, 0x30,
	0x18, 0xc6, 0x63, 0x2e, 0xb9, 0x82, 0x29, 0xa0, 0xba, 0x0c, 0x51, 0x87, 0x24, 0x62, 0x40, 0x11,
	0xa2, 0x09, 0x7f, 0x56, 0x96, 0x0b, 0x48, 0xb4, 0x48, 0x05, 0x29, 0x62, 0x62, 0x89, 0x7c, 0x8e,
	0x71, 0xac, 0xd6, 0x76, 0x64, 0x07, 0x51, 0xbe, 0x05, 0x1f, 0xab, 0xe3, 0x8d, 0x4c, 0x11, 0xba,
	0x7c, 0x8b, 0x9b, 0x90, 0xed, 0x0b, 0x62, 0x42, 0x88, 0xc9, 0x8f, 0x9e, 0xc7, 0xef, 0xef, 0xc9,
	0x9b, 0x04, 0xa6, 0xc3, 0xb7, 0x9e, 0x9a, 0x52, 0x18, 0xd6, 0x08, 0x2c, 0x31, 0xa3, 0xcd, 0xd0,
	0x29, 0x2d, 0xb1, 0xa0, 0x45, 0xaf, 0xd5, 0xa0, 0x50, 0xe4, 0x2e, 0x9c, 0x1c, 0x13, 0x25, 0x84,
	0x92, 0xa5, 0x3f, 0x7c, 0x76, 0xf2, 0x90, 0x29, 0xa6, 0x9c, 0x2c, 0xad, 0xf2, 0xee, 0xa3, 0x69,
	0x01, 0x8f, 0x2e, 0x0c, 0xbb, 0x70, 0xb8, 0x8f, 0x67, 0x1f, 0xea, 0xf7, 0x58, 0x50, 0x84, 0x60,
	0x68, 0xa9, 0x31, 0xc8, 0x40, 0x7e, 0xa7, 0x76, 0x1a, 0xbd, 0x81, 0x11, 0xe9, 0x30, 0x97, 0xf1,
	0x2d, 0x6b, 0x56, 0xc5, 0x6e, 0x4c, 0x9f, 0x30, 0x3e, 0x5c, 0xe1, 0x75, 0x41, 0x94, 0x28, 0xed,
	0x93, 0xb8, 0xdc, 0x29, 0xa9, 0x5a, 0x3a, 0xd7, 0xbf, 0xb6, 0x6e, 0xed, 0x87, 0xd1, 0x3b, 0x78,
	0x80, 0xdb, 0x56, 0x53, 0x63, 0xe2, 0x85, 0xe3, 0x3c, 0xdb, 0x8d, 0xe9, 0xd3, 0x7f, 0xe2, 0xac,
	0xfc, 0x5c, 0x3d, 0x03, 0xd0, 0x63, 0x18, 0x12, 0xc5, 0x65, 0x1c, 0x66, 0x20, 0xbf, 0xfb, 0xe2,
	0xb0, 0x98, 0xfb, 0x14, 0x97, 0x55, 0x78, 0x33, 0xa6, 0x41, 0xed, 0x72, 0x54, 0xc0, 0x63, 0x7a,
	0xdd, 0x73, 0x4d, 0x9b, 0xf5, 0x95, 0x22, 0x97, 0x4d, 0x47, 0x39, 0xeb, 0x86, 0x38, 0xca, 0x40,
	0xbe, 0xa8, 0x8f, 0x7c, 0x54, 0xd9, 0xe4, 0xcc, 0x05, 0xe8, 0x15, 0x7c, 0xd0, 0x6b, 0xfa, 0x99,
	0x6a, 0x4d, 0xdb, 0x06, 0x1b, 0x43, 0x87, 0x78, 0xe9, 0x2a, 0xee, 0xcd, 0x15, 0x2b, 0x6b, 0xee,
	0x3b, 0xee, 0xff, 0xbe, 0xeb, 0x5c, 0xf4, 0x16, 0x46, 0xea, 0xab, 0xa4, 0x3a, 0x3e, 0xc8, 0x40,
	0x7e, 0x58, 0x3d, 0xdf, 0x8d, 0xe9, 0x29, 0xe3, 0x43, 0xf7, 0xc5, 0xef, 0x47, 0x94, 0x11, 0xca,
	0xec, 0x8f, 0x53, 0xd3, 0x5e, 0x96, 0xee, 0x9b, 0x15, 0x2b, 0x42, 0xe6, 0x05, 0xfd, 0x3c, 0x3a,
	0x87, 0x4b, 0xc3, 0x99, 0x25, 0xdd, 0xfe, 0x5f, 0xd2, 0x1e, 0x50, 0x9d, 0xdf, 0x6c, 0x13, 0xb0,
	0xd9, 0x26, 0xe0, 0xe7, 0x36, 0x01, 0xdf, 0xa7, 0x24, 0xd8, 0x4c, 0x49, 0xf0, 0x63, 0x4a, 0x82,
	0x4f, 0xe5, 0xdf, 0x5f, 0xfd, 0xf5, 0x9f, 0xa6, 0xa5, 0xaf, 0x97, 0xee, 0xbf, 0x79, 0xf9, 0x2b,
	0x00, 0x00, 0xff, 0xff, 0x1f, 0x78, 0x7a, 0xf2, 0x8c, 0x02, 0x00, 0x00,
}

func (m *MsgManageTHORName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgManageTHORName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgManageTHORName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Signer) > 0 {
		i -= len(m.Signer)
		copy(dAtA[i:], m.Signer)
		i = encodeVarintMsgManageThorname(dAtA, i, uint64(len(m.Signer)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintMsgManageThorname(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x3a
	}
	{
		size, err := m.PreferredAsset.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMsgManageThorname(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	if m.ExpireBlockHeight != 0 {
		i = encodeVarintMsgManageThorname(dAtA, i, uint64(m.ExpireBlockHeight))
		i--
		dAtA[i] = 0x28
	}
	{
		size, err := m.Coin.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintMsgManageThorname(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintMsgManageThorname(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Chain) > 0 {
		i -= len(m.Chain)
		copy(dAtA[i:], m.Chain)
		i = encodeVarintMsgManageThorname(dAtA, i, uint64(len(m.Chain)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintMsgManageThorname(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMsgManageThorname(dAtA []byte, offset int, v uint64) int {
	offset -= sovMsgManageThorname(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgManageTHORName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovMsgManageThorname(uint64(l))
	}
	l = len(m.Chain)
	if l > 0 {
		n += 1 + l + sovMsgManageThorname(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovMsgManageThorname(uint64(l))
	}
	l = m.Coin.Size()
	n += 1 + l + sovMsgManageThorname(uint64(l))
	if m.ExpireBlockHeight != 0 {
		n += 1 + sovMsgManageThorname(uint64(m.ExpireBlockHeight))
	}
	l = m.PreferredAsset.Size()
	n += 1 + l + sovMsgManageThorname(uint64(l))
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovMsgManageThorname(uint64(l))
	}
	l = len(m.Signer)
	if l > 0 {
		n += 1 + l + sovMsgManageThorname(uint64(l))
	}
	return n
}

func sovMsgManageThorname(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMsgManageThorname(x uint64) (n int) {
	return sovMsgManageThorname(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgManageTHORName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsgManageThorname
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgManageTHORName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgManageTHORName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgManageThorname
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgManageThorname
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgManageThorname
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chain", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgManageThorname
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgManageThorname
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgManageThorname
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Chain = gitlab_com_thorchain_thornode_common.Chain(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgManageThorname
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsgManageThorname
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgManageThorname
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = gitlab_com_thorchain_thornode_common.Address(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgManageThorname
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgManageThorname
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgManageThorname
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Coin.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpireBlockHeight", wireType)
			}
			m.ExpireBlockHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgManageThorname
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ExpireBlockHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreferredAsset", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgManageThorname
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMsgManageThorname
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMsgManageThorname
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.PreferredAsset.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgManageThorname
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMsgManageThorname
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgManageThorname
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = append(m.Owner[:0], dAtA[iNdEx:postIndex]...)
			if m.Owner == nil {
				m.Owner = []byte{}
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Signer", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsgManageThorname
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMsgManageThorname
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMsgManageThorname
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Signer = append(m.Signer[:0], dAtA[iNdEx:postIndex]...)
			if m.Signer == nil {
				m.Signer = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsgManageThorname(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsgManageThorname
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMsgManageThorname(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMsgManageThorname
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgManageThorname
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsgManageThorname
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMsgManageThorname
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMsgManageThorname
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMsgManageThorname
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMsgManageThorname        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMsgManageThorname          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMsgManageThorname = fmt.Errorf("proto: unexpected end of group")
)
