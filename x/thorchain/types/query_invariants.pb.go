// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/query_invariants.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type QueryInvariantRequest struct {
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (m *QueryInvariantRequest) Reset()         { *m = QueryInvariantRequest{} }
func (m *QueryInvariantRequest) String() string { return proto.CompactTextString(m) }
func (*QueryInvariantRequest) ProtoMessage()    {}
func (*QueryInvariantRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_186f596be28286cc, []int{0}
}
func (m *QueryInvariantRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryInvariantRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryInvariantRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryInvariantRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryInvariantRequest.Merge(m, src)
}
func (m *QueryInvariantRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryInvariantRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryInvariantRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryInvariantRequest proto.InternalMessageInfo

func (m *QueryInvariantRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type QueryInvariantResponse struct {
	Invariant string   `protobuf:"bytes,1,opt,name=invariant,proto3" json:"invariant,omitempty"`
	Broken    bool     `protobuf:"varint,2,opt,name=broken,proto3" json:"broken,omitempty"`
	Msg       []string `protobuf:"bytes,3,rep,name=msg,proto3" json:"msg,omitempty"`
}

func (m *QueryInvariantResponse) Reset()         { *m = QueryInvariantResponse{} }
func (m *QueryInvariantResponse) String() string { return proto.CompactTextString(m) }
func (*QueryInvariantResponse) ProtoMessage()    {}
func (*QueryInvariantResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_186f596be28286cc, []int{1}
}
func (m *QueryInvariantResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryInvariantResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryInvariantResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryInvariantResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryInvariantResponse.Merge(m, src)
}
func (m *QueryInvariantResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryInvariantResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryInvariantResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryInvariantResponse proto.InternalMessageInfo

func (m *QueryInvariantResponse) GetInvariant() string {
	if m != nil {
		return m.Invariant
	}
	return ""
}

func (m *QueryInvariantResponse) GetBroken() bool {
	if m != nil {
		return m.Broken
	}
	return false
}

func (m *QueryInvariantResponse) GetMsg() []string {
	if m != nil {
		return m.Msg
	}
	return nil
}

type QueryInvariantsRequest struct {
}

func (m *QueryInvariantsRequest) Reset()         { *m = QueryInvariantsRequest{} }
func (m *QueryInvariantsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryInvariantsRequest) ProtoMessage()    {}
func (*QueryInvariantsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_186f596be28286cc, []int{2}
}
func (m *QueryInvariantsRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryInvariantsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryInvariantsRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryInvariantsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryInvariantsRequest.Merge(m, src)
}
func (m *QueryInvariantsRequest) XXX_Size() int {
	return m.Size()
}
func (m *QueryInvariantsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryInvariantsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryInvariantsRequest proto.InternalMessageInfo

type QueryInvariantsResponse struct {
	InvariantRoutes []string `protobuf:"bytes,1,rep,name=invariant_routes,json=invariantRoutes,proto3" json:"invariant_routes,omitempty"`
}

func (m *QueryInvariantsResponse) Reset()         { *m = QueryInvariantsResponse{} }
func (m *QueryInvariantsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryInvariantsResponse) ProtoMessage()    {}
func (*QueryInvariantsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_186f596be28286cc, []int{3}
}
func (m *QueryInvariantsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryInvariantsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryInvariantsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryInvariantsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryInvariantsResponse.Merge(m, src)
}
func (m *QueryInvariantsResponse) XXX_Size() int {
	return m.Size()
}
func (m *QueryInvariantsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryInvariantsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryInvariantsResponse proto.InternalMessageInfo

func (m *QueryInvariantsResponse) GetInvariantRoutes() []string {
	if m != nil {
		return m.InvariantRoutes
	}
	return nil
}

func init() {
	proto.RegisterType((*QueryInvariantRequest)(nil), "types.QueryInvariantRequest")
	proto.RegisterType((*QueryInvariantResponse)(nil), "types.QueryInvariantResponse")
	proto.RegisterType((*QueryInvariantsRequest)(nil), "types.QueryInvariantsRequest")
	proto.RegisterType((*QueryInvariantsResponse)(nil), "types.QueryInvariantsResponse")
}

func init() { proto.RegisterFile("types/query_invariants.proto", fileDescriptor_186f596be28286cc) }

var fileDescriptor_186f596be28286cc = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x18, 0x84, 0x63, 0x02, 0x15, 0xf1, 0x42, 0x65, 0x41, 0xb1, 0x50, 0x65, 0x45, 0x99, 0x82, 0x90,
	0xea, 0x81, 0x37, 0x40, 0x2c, 0x1d, 0xf1, 0xc8, 0x52, 0x9c, 0x62, 0x25, 0x11, 0xd4, 0x7f, 0x6a,
	0x3b, 0x88, 0xbe, 0x05, 0x8f, 0xc5, 0xd8, 0x91, 0x11, 0x25, 0x2f, 0x82, 0x62, 0x42, 0x40, 0x61,
	0x3b, 0x7f, 0xe7, 0xf3, 0x59, 0x87, 0xe7, 0x6e, 0x57, 0x29, 0xcb, 0xb7, 0xb5, 0x32, 0xbb, 0x55,
	0xa9, 0x5f, 0xa4, 0x29, 0xa5, 0x76, 0x76, 0x51, 0x19, 0x70, 0x40, 0x8e, 0xbc, 0x7b, 0x71, 0x9a,
	0x43, 0x0e, 0x9e, 0xf0, 0x4e, 0x7d, 0x9b, 0xc9, 0x15, 0x3e, 0xbb, 0xeb, 0x62, 0xcb, 0x9f, 0x94,
	0x50, 0xdb, 0x5a, 0x59, 0x47, 0x08, 0x3e, 0xac, 0xa4, 0x2b, 0x28, 0x8a, 0x51, 0x1a, 0x09, 0xaf,
	0x93, 0x07, 0x3c, 0x1b, 0x5f, 0xb6, 0x15, 0x68, 0xab, 0xc8, 0x1c, 0x47, 0x43, 0x6f, 0x1f, 0xf9,
	0x05, 0x64, 0x86, 0x27, 0x99, 0x81, 0x27, 0xa5, 0xe9, 0x41, 0x8c, 0xd2, 0x63, 0xd1, 0x9f, 0xc8,
	0x14, 0x87, 0x1b, 0x9b, 0xd3, 0x30, 0x0e, 0xd3, 0x48, 0x74, 0x32, 0xa1, 0xe3, 0x06, 0xdb, 0xff,
	0x27, 0xb9, 0xc5, 0xe7, 0xff, 0x9c, 0xbe, 0xfc, 0x12, 0x4f, 0x87, 0xae, 0x95, 0x81, 0xda, 0x29,
	0x4b, 0x91, 0x7f, 0xf3, 0x64, 0xe0, 0xc2, 0xe3, 0x9b, 0xe5, 0x7b, 0xc3, 0xd0, 0xbe, 0x61, 0xe8,
	0xb3, 0x61, 0xe8, 0xad, 0x65, 0xc1, 0xbe, 0x65, 0xc1, 0x47, 0xcb, 0x82, 0x7b, 0x9e, 0x97, 0xee,
	0x59, 0x66, 0x8b, 0x35, 0x6c, 0xb8, 0x2b, 0xc0, 0xac, 0x0b, 0x59, 0x6a, 0xaf, 0x34, 0x3c, 0x2a,
	0xfe, 0xfa, 0x17, 0x76, 0x7b, 0x66, 0x13, 0x3f, 0xe0, 0xf5, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x8b, 0x28, 0x6b, 0x03, 0x7d, 0x01, 0x00, 0x00,
}

func (m *QueryInvariantRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryInvariantRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryInvariantRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Path) > 0 {
		i -= len(m.Path)
		copy(dAtA[i:], m.Path)
		i = encodeVarintQueryInvariants(dAtA, i, uint64(len(m.Path)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryInvariantResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryInvariantResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryInvariantResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Msg) > 0 {
		for iNdEx := len(m.Msg) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Msg[iNdEx])
			copy(dAtA[i:], m.Msg[iNdEx])
			i = encodeVarintQueryInvariants(dAtA, i, uint64(len(m.Msg[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.Broken {
		i--
		if m.Broken {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.Invariant) > 0 {
		i -= len(m.Invariant)
		copy(dAtA[i:], m.Invariant)
		i = encodeVarintQueryInvariants(dAtA, i, uint64(len(m.Invariant)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryInvariantsRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryInvariantsRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryInvariantsRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *QueryInvariantsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryInvariantsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryInvariantsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.InvariantRoutes) > 0 {
		for iNdEx := len(m.InvariantRoutes) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.InvariantRoutes[iNdEx])
			copy(dAtA[i:], m.InvariantRoutes[iNdEx])
			i = encodeVarintQueryInvariants(dAtA, i, uint64(len(m.InvariantRoutes[iNdEx])))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintQueryInvariants(dAtA []byte, offset int, v uint64) int {
	offset -= sovQueryInvariants(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryInvariantRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Path)
	if l > 0 {
		n += 1 + l + sovQueryInvariants(uint64(l))
	}
	return n
}

func (m *QueryInvariantResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Invariant)
	if l > 0 {
		n += 1 + l + sovQueryInvariants(uint64(l))
	}
	if m.Broken {
		n += 2
	}
	if len(m.Msg) > 0 {
		for _, s := range m.Msg {
			l = len(s)
			n += 1 + l + sovQueryInvariants(uint64(l))
		}
	}
	return n
}

func (m *QueryInvariantsRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *QueryInvariantsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.InvariantRoutes) > 0 {
		for _, s := range m.InvariantRoutes {
			l = len(s)
			n += 1 + l + sovQueryInvariants(uint64(l))
		}
	}
	return n
}

func sovQueryInvariants(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQueryInvariants(x uint64) (n int) {
	return sovQueryInvariants(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryInvariantRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryInvariants
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryInvariantRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryInvariantRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Path", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryInvariants
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryInvariants
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryInvariants
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Path = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueryInvariants(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryInvariants
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryInvariantResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryInvariants
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryInvariantResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryInvariantResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Invariant", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryInvariants
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryInvariants
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryInvariants
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Invariant = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Broken", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryInvariants
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Broken = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Msg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryInvariants
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryInvariants
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryInvariants
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Msg = append(m.Msg, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueryInvariants(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryInvariants
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryInvariantsRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryInvariants
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryInvariantsRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryInvariantsRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQueryInvariants(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryInvariants
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryInvariantsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueryInvariants
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryInvariantsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryInvariantsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InvariantRoutes", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueryInvariants
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueryInvariants
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueryInvariants
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InvariantRoutes = append(m.InvariantRoutes, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueryInvariants(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQueryInvariants
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQueryInvariants(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQueryInvariants
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueryInvariants
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueryInvariants
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQueryInvariants
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQueryInvariants
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQueryInvariants
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQueryInvariants        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQueryInvariants          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQueryInvariants = fmt.Errorf("proto: unexpected end of group")
)
