// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types/query_saver.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type QuerySaverRequest struct {
	Asset   string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *QuerySaverRequest) Reset()         { *m = QuerySaverRequest{} }
func (m *QuerySaverRequest) String() string { return proto.CompactTextString(m) }
func (*QuerySaverRequest) ProtoMessage()    {}
func (*QuerySaverRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1398a6f1035715c7, []int{0}
}
func (m *QuerySaverRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuerySaverRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuerySaverRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuerySaverRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySaverRequest.Merge(m, src)
}
func (m *QuerySaverRequest) XXX_Size() int {
	return m.Size()
}
func (m *QuerySaverRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySaverRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySaverRequest proto.InternalMessageInfo

func (m *QuerySaverRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *QuerySaverRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type QuerySaverResponse struct {
	Asset              string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	AssetAddress       string `protobuf:"bytes,2,opt,name=asset_address,json=assetAddress,proto3" json:"asset_address,omitempty"`
	LastAddHeight      int64  `protobuf:"varint,3,opt,name=last_add_height,json=lastAddHeight,proto3" json:"last_add_height,omitempty"`
	LastWithdrawHeight int64  `protobuf:"varint,4,opt,name=last_withdraw_height,json=lastWithdrawHeight,proto3" json:"last_withdraw_height,omitempty"`
	Units              string `protobuf:"bytes,5,opt,name=units,proto3" json:"units,omitempty"`
	AssetDepositValue  string `protobuf:"bytes,6,opt,name=asset_deposit_value,json=assetDepositValue,proto3" json:"asset_deposit_value,omitempty"`
	AssetRedeemValue   string `protobuf:"bytes,7,opt,name=asset_redeem_value,json=assetRedeemValue,proto3" json:"asset_redeem_value,omitempty"`
	GrowthPct          string `protobuf:"bytes,8,opt,name=growth_pct,json=growthPct,proto3" json:"growth_pct,omitempty"`
}

func (m *QuerySaverResponse) Reset()         { *m = QuerySaverResponse{} }
func (m *QuerySaverResponse) String() string { return proto.CompactTextString(m) }
func (*QuerySaverResponse) ProtoMessage()    {}
func (*QuerySaverResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1398a6f1035715c7, []int{1}
}
func (m *QuerySaverResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuerySaverResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuerySaverResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuerySaverResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySaverResponse.Merge(m, src)
}
func (m *QuerySaverResponse) XXX_Size() int {
	return m.Size()
}
func (m *QuerySaverResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySaverResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySaverResponse proto.InternalMessageInfo

func (m *QuerySaverResponse) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *QuerySaverResponse) GetAssetAddress() string {
	if m != nil {
		return m.AssetAddress
	}
	return ""
}

func (m *QuerySaverResponse) GetLastAddHeight() int64 {
	if m != nil {
		return m.LastAddHeight
	}
	return 0
}

func (m *QuerySaverResponse) GetLastWithdrawHeight() int64 {
	if m != nil {
		return m.LastWithdrawHeight
	}
	return 0
}

func (m *QuerySaverResponse) GetUnits() string {
	if m != nil {
		return m.Units
	}
	return ""
}

func (m *QuerySaverResponse) GetAssetDepositValue() string {
	if m != nil {
		return m.AssetDepositValue
	}
	return ""
}

func (m *QuerySaverResponse) GetAssetRedeemValue() string {
	if m != nil {
		return m.AssetRedeemValue
	}
	return ""
}

func (m *QuerySaverResponse) GetGrowthPct() string {
	if m != nil {
		return m.GrowthPct
	}
	return ""
}

type QuerySaversRequest struct {
	Asset string `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
}

func (m *QuerySaversRequest) Reset()         { *m = QuerySaversRequest{} }
func (m *QuerySaversRequest) String() string { return proto.CompactTextString(m) }
func (*QuerySaversRequest) ProtoMessage()    {}
func (*QuerySaversRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1398a6f1035715c7, []int{2}
}
func (m *QuerySaversRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuerySaversRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuerySaversRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuerySaversRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySaversRequest.Merge(m, src)
}
func (m *QuerySaversRequest) XXX_Size() int {
	return m.Size()
}
func (m *QuerySaversRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySaversRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySaversRequest proto.InternalMessageInfo

func (m *QuerySaversRequest) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

type QuerySaversResponse struct {
	Savers []*QuerySaverResponse `protobuf:"bytes,1,rep,name=savers,proto3" json:"savers,omitempty"`
}

func (m *QuerySaversResponse) Reset()         { *m = QuerySaversResponse{} }
func (m *QuerySaversResponse) String() string { return proto.CompactTextString(m) }
func (*QuerySaversResponse) ProtoMessage()    {}
func (*QuerySaversResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1398a6f1035715c7, []int{3}
}
func (m *QuerySaversResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuerySaversResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuerySaversResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuerySaversResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySaversResponse.Merge(m, src)
}
func (m *QuerySaversResponse) XXX_Size() int {
	return m.Size()
}
func (m *QuerySaversResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySaversResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySaversResponse proto.InternalMessageInfo

func (m *QuerySaversResponse) GetSavers() []*QuerySaverResponse {
	if m != nil {
		return m.Savers
	}
	return nil
}

func init() {
	proto.RegisterType((*QuerySaverRequest)(nil), "types.QuerySaverRequest")
	proto.RegisterType((*QuerySaverResponse)(nil), "types.QuerySaverResponse")
	proto.RegisterType((*QuerySaversRequest)(nil), "types.QuerySaversRequest")
	proto.RegisterType((*QuerySaversResponse)(nil), "types.QuerySaversResponse")
}

func init() { proto.RegisterFile("types/query_saver.proto", fileDescriptor_1398a6f1035715c7) }

var fileDescriptor_1398a6f1035715c7 = []byte{
	// 389 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xdf, 0x6a, 0xdb, 0x30,
	0x14, 0x87, 0xe3, 0x64, 0x4e, 0x16, 0x6d, 0x61, 0x8b, 0x62, 0x98, 0x36, 0x98, 0x09, 0x1e, 0x8c,
	0x30, 0x86, 0xbd, 0x3f, 0x4f, 0x90, 0xad, 0x17, 0xe9, 0x5d, 0xeb, 0x42, 0x0b, 0xbd, 0x31, 0x8a,
	0x25, 0x6c, 0x43, 0x62, 0x39, 0x92, 0x9c, 0x34, 0x6f, 0xd1, 0x07, 0xea, 0x03, 0xf4, 0x32, 0x97,
	0xbd, 0x2c, 0xc9, 0x8b, 0x14, 0x1f, 0x39, 0x90, 0x50, 0xda, 0x3b, 0x9d, 0xdf, 0xf7, 0x9d, 0x63,
	0xa1, 0x63, 0xf4, 0x49, 0xaf, 0x0b, 0xae, 0x82, 0x45, 0xc9, 0xe5, 0x3a, 0x52, 0x74, 0xc9, 0xa5,
	0x5f, 0x48, 0xa1, 0x05, 0xb6, 0x01, 0x7c, 0x71, 0x12, 0x91, 0x08, 0x48, 0x82, 0xea, 0x64, 0xa0,
	0xf7, 0x1f, 0xf5, 0xcf, 0xab, 0x8e, 0x8b, 0xaa, 0x21, 0xe4, 0x8b, 0x92, 0x2b, 0x8d, 0x1d, 0x64,
	0x53, 0xa5, 0xb8, 0x26, 0xd6, 0xd0, 0x1a, 0x75, 0x43, 0x53, 0x60, 0x82, 0x3a, 0x94, 0x31, 0xc9,
	0x95, 0x22, 0x4d, 0xc8, 0xf7, 0xa5, 0x77, 0xd7, 0x44, 0xf8, 0x70, 0x8a, 0x2a, 0x44, 0xae, 0xf8,
	0x0b, 0x63, 0xbe, 0xa1, 0x1e, 0x1c, 0xa2, 0xe3, 0x61, 0xef, 0x21, 0x1c, 0x9b, 0x0c, 0x7f, 0x47,
	0x1f, 0x66, 0x54, 0x81, 0x13, 0xa5, 0x3c, 0x4b, 0x52, 0x4d, 0x5a, 0x43, 0x6b, 0xd4, 0x0a, 0x7b,
	0x55, 0x3c, 0x66, 0x6c, 0x02, 0x21, 0xfe, 0x85, 0x1c, 0xf0, 0x56, 0x99, 0x4e, 0x99, 0xa4, 0xab,
	0xbd, 0xfc, 0x06, 0x64, 0x5c, 0xb1, 0xab, 0x1a, 0xd5, 0x1d, 0x0e, 0xb2, 0xcb, 0x3c, 0xd3, 0x8a,
	0xd8, 0xe6, 0x52, 0x50, 0x60, 0x1f, 0x0d, 0xcc, 0xa5, 0x18, 0x2f, 0x84, 0xca, 0x74, 0xb4, 0xa4,
	0xb3, 0x92, 0x93, 0x36, 0x38, 0x7d, 0x40, 0x27, 0x86, 0x5c, 0x56, 0x00, 0xff, 0x44, 0xd8, 0xf8,
	0x92, 0x33, 0xce, 0xe7, 0xb5, 0xde, 0x01, 0xfd, 0x23, 0x90, 0x10, 0x80, 0xb1, 0xbf, 0x22, 0x94,
	0x48, 0xb1, 0xd2, 0x69, 0x54, 0xc4, 0x9a, 0xbc, 0x05, 0xab, 0x6b, 0x92, 0xb3, 0x58, 0x7b, 0x3f,
	0x0e, 0x5f, 0x4f, 0xbd, 0xba, 0x04, 0x6f, 0x82, 0x06, 0x47, 0x6e, 0xfd, 0xd4, 0xbf, 0x51, 0x1b,
	0x56, 0xae, 0x88, 0x35, 0x6c, 0x8d, 0xde, 0xfd, 0xf9, 0xec, 0xc3, 0xd2, 0xfd, 0xe7, 0x5b, 0x09,
	0x6b, 0xf1, 0xdf, 0xe9, 0xfd, 0xd6, 0xb5, 0x36, 0x5b, 0xd7, 0x7a, 0xdc, 0xba, 0xd6, 0xed, 0xce,
	0x6d, 0x6c, 0x76, 0x6e, 0xe3, 0x61, 0xe7, 0x36, 0xae, 0x83, 0x24, 0xd3, 0x33, 0x3a, 0xf5, 0x63,
	0x31, 0x0f, 0x74, 0x2a, 0x64, 0x9c, 0xd2, 0x2c, 0x87, 0x53, 0x2e, 0x18, 0x0f, 0x6e, 0x0e, 0xc3,
	0xea, 0x2b, 0xd3, 0x36, 0xfc, 0x4b, 0x7f, 0x9f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xf7, 0x4a, 0x6e,
	0xe3, 0x83, 0x02, 0x00, 0x00,
}

func (m *QuerySaverRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuerySaverRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuerySaverRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQuerySaver(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Asset) > 0 {
		i -= len(m.Asset)
		copy(dAtA[i:], m.Asset)
		i = encodeVarintQuerySaver(dAtA, i, uint64(len(m.Asset)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QuerySaverResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuerySaverResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuerySaverResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GrowthPct) > 0 {
		i -= len(m.GrowthPct)
		copy(dAtA[i:], m.GrowthPct)
		i = encodeVarintQuerySaver(dAtA, i, uint64(len(m.GrowthPct)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.AssetRedeemValue) > 0 {
		i -= len(m.AssetRedeemValue)
		copy(dAtA[i:], m.AssetRedeemValue)
		i = encodeVarintQuerySaver(dAtA, i, uint64(len(m.AssetRedeemValue)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.AssetDepositValue) > 0 {
		i -= len(m.AssetDepositValue)
		copy(dAtA[i:], m.AssetDepositValue)
		i = encodeVarintQuerySaver(dAtA, i, uint64(len(m.AssetDepositValue)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Units) > 0 {
		i -= len(m.Units)
		copy(dAtA[i:], m.Units)
		i = encodeVarintQuerySaver(dAtA, i, uint64(len(m.Units)))
		i--
		dAtA[i] = 0x2a
	}
	if m.LastWithdrawHeight != 0 {
		i = encodeVarintQuerySaver(dAtA, i, uint64(m.LastWithdrawHeight))
		i--
		dAtA[i] = 0x20
	}
	if m.LastAddHeight != 0 {
		i = encodeVarintQuerySaver(dAtA, i, uint64(m.LastAddHeight))
		i--
		dAtA[i] = 0x18
	}
	if len(m.AssetAddress) > 0 {
		i -= len(m.AssetAddress)
		copy(dAtA[i:], m.AssetAddress)
		i = encodeVarintQuerySaver(dAtA, i, uint64(len(m.AssetAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Asset) > 0 {
		i -= len(m.Asset)
		copy(dAtA[i:], m.Asset)
		i = encodeVarintQuerySaver(dAtA, i, uint64(len(m.Asset)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QuerySaversRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuerySaversRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuerySaversRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Asset) > 0 {
		i -= len(m.Asset)
		copy(dAtA[i:], m.Asset)
		i = encodeVarintQuerySaver(dAtA, i, uint64(len(m.Asset)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QuerySaversResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuerySaversResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuerySaversResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Savers) > 0 {
		for iNdEx := len(m.Savers) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Savers[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintQuerySaver(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuerySaver(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuerySaver(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QuerySaverRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Asset)
	if l > 0 {
		n += 1 + l + sovQuerySaver(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQuerySaver(uint64(l))
	}
	return n
}

func (m *QuerySaverResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Asset)
	if l > 0 {
		n += 1 + l + sovQuerySaver(uint64(l))
	}
	l = len(m.AssetAddress)
	if l > 0 {
		n += 1 + l + sovQuerySaver(uint64(l))
	}
	if m.LastAddHeight != 0 {
		n += 1 + sovQuerySaver(uint64(m.LastAddHeight))
	}
	if m.LastWithdrawHeight != 0 {
		n += 1 + sovQuerySaver(uint64(m.LastWithdrawHeight))
	}
	l = len(m.Units)
	if l > 0 {
		n += 1 + l + sovQuerySaver(uint64(l))
	}
	l = len(m.AssetDepositValue)
	if l > 0 {
		n += 1 + l + sovQuerySaver(uint64(l))
	}
	l = len(m.AssetRedeemValue)
	if l > 0 {
		n += 1 + l + sovQuerySaver(uint64(l))
	}
	l = len(m.GrowthPct)
	if l > 0 {
		n += 1 + l + sovQuerySaver(uint64(l))
	}
	return n
}

func (m *QuerySaversRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Asset)
	if l > 0 {
		n += 1 + l + sovQuerySaver(uint64(l))
	}
	return n
}

func (m *QuerySaversResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Savers) > 0 {
		for _, e := range m.Savers {
			l = e.Size()
			n += 1 + l + sovQuerySaver(uint64(l))
		}
	}
	return n
}

func sovQuerySaver(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuerySaver(x uint64) (n int) {
	return sovQuerySaver(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QuerySaverRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuerySaver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuerySaverRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuerySaverRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Asset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySaver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySaver
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySaver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Asset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySaver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySaver
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySaver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuerySaver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuerySaver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuerySaverResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuerySaver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuerySaverResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuerySaverResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Asset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySaver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySaver
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySaver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Asset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssetAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySaver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySaver
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySaver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AssetAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastAddHeight", wireType)
			}
			m.LastAddHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySaver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastAddHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastWithdrawHeight", wireType)
			}
			m.LastWithdrawHeight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySaver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastWithdrawHeight |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Units", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySaver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySaver
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySaver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Units = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssetDepositValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySaver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySaver
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySaver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AssetDepositValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AssetRedeemValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySaver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySaver
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySaver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AssetRedeemValue = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GrowthPct", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySaver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySaver
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySaver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GrowthPct = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuerySaver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuerySaver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuerySaversRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuerySaver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuerySaversRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuerySaversRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Asset", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySaver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerySaver
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySaver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Asset = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuerySaver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuerySaver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuerySaversResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuerySaver
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuerySaversResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuerySaversResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Savers", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerySaver
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQuerySaver
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQuerySaver
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Savers = append(m.Savers, &QuerySaverResponse{})
			if err := m.Savers[len(m.Savers)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuerySaver(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuerySaver
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuerySaver(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuerySaver
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuerySaver
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuerySaver
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuerySaver
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuerySaver
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuerySaver
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuerySaver        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuerySaver          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuerySaver = fmt.Errorf("proto: unexpected end of group")
)
