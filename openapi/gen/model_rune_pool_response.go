/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RUNEPoolResponse struct for RUNEPoolResponse
type RUNEPoolResponse struct {
	Pol POL `json:"pol"`
	Providers RUNEPoolResponseProviders `json:"providers"`
	Reserve RUNEPoolResponseReserve `json:"reserve"`
}

// NewRUNEPoolResponse instantiates a new RUNEPoolResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRUNEPoolResponse(pol POL, providers RUNEPoolResponseProviders, reserve RUNEPoolResponseReserve) *RUNEPoolResponse {
	this := RUNEPoolResponse{}
	this.Pol = pol
	this.Providers = providers
	this.Reserve = reserve
	return &this
}

// NewRUNEPoolResponseWithDefaults instantiates a new RUNEPoolResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRUNEPoolResponseWithDefaults() *RUNEPoolResponse {
	this := RUNEPoolResponse{}
	return &this
}

// GetPol returns the Pol field value
func (o *RUNEPoolResponse) GetPol() POL {
	if o == nil {
		var ret POL
		return ret
	}

	return o.Pol
}

// GetPolOk returns a tuple with the Pol field value
// and a boolean to check if the value has been set.
func (o *RUNEPoolResponse) GetPolOk() (*POL, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pol, true
}

// SetPol sets field value
func (o *RUNEPoolResponse) SetPol(v POL) {
	o.Pol = v
}

// GetProviders returns the Providers field value
func (o *RUNEPoolResponse) GetProviders() RUNEPoolResponseProviders {
	if o == nil {
		var ret RUNEPoolResponseProviders
		return ret
	}

	return o.Providers
}

// GetProvidersOk returns a tuple with the Providers field value
// and a boolean to check if the value has been set.
func (o *RUNEPoolResponse) GetProvidersOk() (*RUNEPoolResponseProviders, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Providers, true
}

// SetProviders sets field value
func (o *RUNEPoolResponse) SetProviders(v RUNEPoolResponseProviders) {
	o.Providers = v
}

// GetReserve returns the Reserve field value
func (o *RUNEPoolResponse) GetReserve() RUNEPoolResponseReserve {
	if o == nil {
		var ret RUNEPoolResponseReserve
		return ret
	}

	return o.Reserve
}

// GetReserveOk returns a tuple with the Reserve field value
// and a boolean to check if the value has been set.
func (o *RUNEPoolResponse) GetReserveOk() (*RUNEPoolResponseReserve, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reserve, true
}

// SetReserve sets field value
func (o *RUNEPoolResponse) SetReserve(v RUNEPoolResponseReserve) {
	o.Reserve = v
}

func (o RUNEPoolResponse) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pol"] = o.Pol
	}
	if true {
		toSerialize["providers"] = o.Providers
	}
	if true {
		toSerialize["reserve"] = o.Reserve
	}
	return json.Marshal(toSerialize)
}

type NullableRUNEPoolResponse struct {
	value *RUNEPoolResponse
	isSet bool
}

func (v NullableRUNEPoolResponse) Get() *RUNEPoolResponse {
	return v.value
}

func (v *NullableRUNEPoolResponse) Set(val *RUNEPoolResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRUNEPoolResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRUNEPoolResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRUNEPoolResponse(val *RUNEPoolResponse) *NullableRUNEPoolResponse {
	return &NullableRUNEPoolResponse{value: val, isSet: true}
}

func (v NullableRUNEPoolResponse) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRUNEPoolResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


