/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// POL struct for POL
type POL struct {
	// total amount of RUNE deposited into the pools
	RuneDeposited string `json:"rune_deposited"`
	// total amount of RUNE withdrawn from the pools
	RuneWithdrawn string `json:"rune_withdrawn"`
	// total value of protocol's LP position in RUNE value
	Value string `json:"value"`
	// profit and loss of protocol owned liquidity
	Pnl string `json:"pnl"`
	// current amount of rune deposited
	CurrentDeposit string `json:"current_deposit"`
}

// NewPOL instantiates a new POL object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPOL(runeDeposited string, runeWithdrawn string, value string, pnl string, currentDeposit string) *POL {
	this := POL{}
	this.RuneDeposited = runeDeposited
	this.RuneWithdrawn = runeWithdrawn
	this.Value = value
	this.Pnl = pnl
	this.CurrentDeposit = currentDeposit
	return &this
}

// NewPOLWithDefaults instantiates a new POL object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPOLWithDefaults() *POL {
	this := POL{}
	return &this
}

// GetRuneDeposited returns the RuneDeposited field value
func (o *POL) GetRuneDeposited() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RuneDeposited
}

// GetRuneDepositedOk returns a tuple with the RuneDeposited field value
// and a boolean to check if the value has been set.
func (o *POL) GetRuneDepositedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuneDeposited, true
}

// SetRuneDeposited sets field value
func (o *POL) SetRuneDeposited(v string) {
	o.RuneDeposited = v
}

// GetRuneWithdrawn returns the RuneWithdrawn field value
func (o *POL) GetRuneWithdrawn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RuneWithdrawn
}

// GetRuneWithdrawnOk returns a tuple with the RuneWithdrawn field value
// and a boolean to check if the value has been set.
func (o *POL) GetRuneWithdrawnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuneWithdrawn, true
}

// SetRuneWithdrawn sets field value
func (o *POL) SetRuneWithdrawn(v string) {
	o.RuneWithdrawn = v
}

// GetValue returns the Value field value
func (o *POL) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *POL) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *POL) SetValue(v string) {
	o.Value = v
}

// GetPnl returns the Pnl field value
func (o *POL) GetPnl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pnl
}

// GetPnlOk returns a tuple with the Pnl field value
// and a boolean to check if the value has been set.
func (o *POL) GetPnlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pnl, true
}

// SetPnl sets field value
func (o *POL) SetPnl(v string) {
	o.Pnl = v
}

// GetCurrentDeposit returns the CurrentDeposit field value
func (o *POL) GetCurrentDeposit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrentDeposit
}

// GetCurrentDepositOk returns a tuple with the CurrentDeposit field value
// and a boolean to check if the value has been set.
func (o *POL) GetCurrentDepositOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentDeposit, true
}

// SetCurrentDeposit sets field value
func (o *POL) SetCurrentDeposit(v string) {
	o.CurrentDeposit = v
}

func (o POL) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["rune_deposited"] = o.RuneDeposited
	}
	if true {
		toSerialize["rune_withdrawn"] = o.RuneWithdrawn
	}
	if true {
		toSerialize["value"] = o.Value
	}
	if true {
		toSerialize["pnl"] = o.Pnl
	}
	if true {
		toSerialize["current_deposit"] = o.CurrentDeposit
	}
	return json.Marshal(toSerialize)
}

type NullablePOL struct {
	value *POL
	isSet bool
}

func (v NullablePOL) Get() *POL {
	return v.value
}

func (v *NullablePOL) Set(val *POL) {
	v.value = val
	v.isSet = true
}

func (v NullablePOL) IsSet() bool {
	return v.isSet
}

func (v *NullablePOL) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePOL(val *POL) *NullablePOL {
	return &NullablePOL{value: val, isSet: true}
}

func (v NullablePOL) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePOL) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


